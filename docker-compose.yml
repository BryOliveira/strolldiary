services:
  frontend:
    container_name: strolldiary-frontend
    build: 
      context: ./frontend
      target: dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    restart: unless-stopped
  backend:
    container_name: strolldiary-backend
    build:
      context: ./backend
      target: dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app/src
      - ./backend/pom.xml:/app/pom.xml
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/strolldiarydb
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_SECURITY_USERNAME=${SPRING_SECURITY_USERNAME}
      - SPRING_SECURITY_PASSWORD=${SPRING_SECURITY_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
  postgres:
    container_name: strolldiary-postgres
    image: 'postgis/postgis:latest'
    environment:
      - 'POSTGRES_DB=strolldiarydb'
      - 'POSTGRES_PASSWORD=${DATABASE_PASSWORD}'
      - 'POSTGRES_USER=${DATABASE_USERNAME}'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      # - ./db/dummydata.sql:/docker-entrypoint-initdb.d/dummydata.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d strolldiarydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
